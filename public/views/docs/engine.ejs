<h1>Engine API</h1>

You can write code to programmatically invoke the ql.io engine. Here is some code that you can run on nodejs.

<pre class="brush: sql; toolbar: false;">
            var engine = new Engine({
                tables : __dirname + '/tables',
                config: __dirname + '/config/dev.json'
            });
            var script = 'select * from finditems where keywords="ipad"';
            var inFlight, success, error, request, response;
            engine.execute(script, function(req) {
                req.on(Engine.Events.STATEMENT_IN_FLIGHT, function() {
                    console.log ("Statement In_flight event");
                    inFlight = true;
                });
                req.on(Engine.Events.STATEMENT_SUCCESS, function() {
                    console.log ("Statement Success event");
                    success = true;
                });
                req.on(Engine.Events.STATEMENT_REQUEST, function() {
                    console.log ("Statement Request event");
                    request = true;
                });
                req.on(Engine.Events.STATEMENT_RESPONSE, function() {
                    console.log ("Statement Response event");
                    response = true;
                });
                req.on(Engine.Events.STATEMENT_ERROR, function() {
                    console.log ("Statement Error event");
                    error = true;
                });
                req.on('end', function() {
                })
            })


</pre>
<h2> Events generated by the engine </h2>

<p>
    <ul>
        <li><code>ql.io-script-ack:</code> Emitted when the server receives the script.</li>
        <li><code>ql.io-script-compile-error:</code> Emitted in the case syntactical errors with the script.</li>
        <li><code>ql.io-script-compile-ok:</code> Emitted when script compilation succeeds.</li>
        <li><code>ql.io-statement-in-flight:</code> Emitted while a statement execution is in progress.</li>
        <li><code>ql.io-statement-error:</code> Emitted when a statement execution failed. </li>
        <li><code>ql.io-statement-success:</code> Emitted when a statement execution succeeded.</li>
        <li><code>ql.io-statement-request:</code> Emitted when a statement sends an HTTP request.</li>
        <li><code>ql.io-statement-response:</code> Emitted when the server receives an HTTP response.</li>
        <li><code>ql.io-script-done:</code> Emitted when the script execution is complete.</li>
        <li><code>ql.io-script-result:</code> Emitted with results.</li>
    </ul>
</p>

<h2> Logging </h2>

The following events can be used for debugging purposes.

<pre class="brush: sql; toolbar: false;">

// Event emitted when an event starts. An event may encompass one or more activities.
exports.BEGIN_EVENT = 'ql.io-begin-event';

// Event emitted when an event ends.
exports.END_EVENT = 'ql.io-end-event';

// Event emitted periodically by an instance of the ql.io server..
exports.HEART_BEAT = 'ql.io-heart-beat'

// An event.
exports.EVENT = 'ql.io-event';

// Warning event.
exports.WARNING = 'ql.io-warning';

// Error event.
exports.ERROR = 'ql.io-error';
</pre>